version: '1.0'
name: 'siriusdates'
services:
  rabbitmq:
    image: rabbitmq:3.13.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      retries: 5
      timeout: 5s

  redis:
    image: redis:6.2.4
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 5s

  db:
    image: neo4j:5.26.0
    environment:
      - NEO4J_AUTH=neo4j/12345678 
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:7474/"]
      interval: 0.5s
      retries: 30

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio/data:/data
      - ./minio/certs:/certs
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_ACCESS_KEY: miniotest
      MINIO_SECRET_KEY: miniotest
      MINIO_SCHEME: https
      SSL_CERT_FILE: /certs/public.crt
    command: server --console-address ":9001" /data --certs-dir /certs
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9000/minio/health/live"]
      interval: 5s
      retries: 5
      timeout: 5s

  nginx:
    image: nginx
    container_name: nginx
    depends_on:
      - minio
    ports:
      - "80:80"   
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./minio/certs:/etc/nginx/certs


  producer:
    build:
      dockerfile: Dockerfile
      context: .
    command: bash -c "python3 scripts/setup_db.py && python3 src/app.py"
    volumes:
      - .:/code
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      db:
        condition: service_healthy
    stop_signal: SIGINT

  consumer:
    build:
      dockerfile: Dockerfile
      context: .
    command: python3 consumer
    volumes:
      - .:/code
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      db:
        condition: service_healthy
    stop_signal: SIGINT

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=../prometheus/prometheus_config.yml"
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus:/prometheus


volumes:
  producer-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./src

  consumer-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./consumer
